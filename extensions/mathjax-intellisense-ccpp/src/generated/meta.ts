// This file is generated by `vscode-ext-gen`. Do not modify manually.
// @see https://github.com/antfu/vscode-ext-gen

// Meta info
export const publisher = "howcasperwhat"
export const name = "mathjax-intellisense-ccpp"
export const version = "0.1.8"
export const displayName = "MathJax IntelliSense for C/C++"
export const description = "A VS Code extension that provides MathJax IntelliSense for C/C++."
export const extensionId = `${publisher}.${name}`

/**
 * Type union of all commands
 */
export type CommandKey = 
  | "mathjax-intellisense.edit"
  | "mathjax-intellisense.view"
  | "mathjax-intellisense.both"
  | "mathjax-intellisense.toggle"

/**
 * Commands map registed by `howcasperwhat.mathjax-intellisense-ccpp`
 */
export const commands = {
  /**
   * MathJax IntelliSense: Edit Mode
   * @value `mathjax-intellisense.edit`
   */
  mathjaxIntellisenseEdit: "mathjax-intellisense.edit",
  /**
   * MathJax IntelliSense: View Mode
   * @value `mathjax-intellisense.view`
   */
  mathjaxIntellisenseView: "mathjax-intellisense.view",
  /**
   * MathJax IntelliSense: Both Modes
   * @value `mathjax-intellisense.both`
   */
  mathjaxIntellisenseBoth: "mathjax-intellisense.both",
  /**
   * MathJax IntelliSense: Toggle Mode
   * @value `mathjax-intellisense.toggle`
   */
  mathjaxIntellisenseToggle: "mathjax-intellisense.toggle",
} satisfies Record<string, CommandKey>

/**
 * Type union of all configs
 */
export type ConfigKey = 
  | "mathjax-intellisense-ccpp.color"
  | "mathjax-intellisense-ccpp.interval"
  | "mathjax-intellisense-ccpp.code"
  | "mathjax-intellisense-ccpp.preview"
  | "mathjax-intellisense-ccpp.scale"
  | "mathjax-intellisense-ccpp.preload"
  | "mathjax-intellisense-ccpp.formula"
  | "mathjax-intellisense-ccpp.mode"

export interface ConfigKeyTypeMap {
  "mathjax-intellisense-ccpp.color": string,
  "mathjax-intellisense-ccpp.interval": number,
  "mathjax-intellisense-ccpp.code": string,
  "mathjax-intellisense-ccpp.preview": string,
  "mathjax-intellisense-ccpp.scale": number,
  "mathjax-intellisense-ccpp.preload": string[],
  "mathjax-intellisense-ccpp.formula": ("doxygen" | "markdown")[],
  "mathjax-intellisense-ccpp.mode": ("edit" | "view" | "both"),
}

export interface ConfigShorthandMap {
  color: "mathjax-intellisense-ccpp.color",
  interval: "mathjax-intellisense-ccpp.interval",
  code: "mathjax-intellisense-ccpp.code",
  preview: "mathjax-intellisense-ccpp.preview",
  scale: "mathjax-intellisense-ccpp.scale",
  preload: "mathjax-intellisense-ccpp.preload",
  formula: "mathjax-intellisense-ccpp.formula",
  mode: "mathjax-intellisense-ccpp.mode",
}

export interface ConfigShorthandTypeMap {
  color: string,
  interval: number,
  code: string,
  preview: string,
  scale: number,
  preload: string[],
  formula: ("doxygen" | "markdown")[],
  mode: ("edit" | "view" | "both"),
}

export interface ConfigItem<T extends keyof ConfigKeyTypeMap> {
  key: T,
  default: ConfigKeyTypeMap[T],
}


/**
 * Configs map registered by `howcasperwhat.mathjax-intellisense-ccpp`
 */
export const configs = {
  /**
   * Color of rendered formulas.
   * @key `mathjax-intellisense-ccpp.color`
   * @default `"auto"`
   * @type `string`
   */
  color: {
    key: "mathjax-intellisense-ccpp.color",
    default: "auto",
  } as ConfigItem<"mathjax-intellisense-ccpp.color">,
  /**
   * Formula update interval(ms).
   * @key `mathjax-intellisense-ccpp.interval`
   * @default `300`
   * @type `number`
   */
  interval: {
    key: "mathjax-intellisense-ccpp.interval",
    default: 300,
  } as ConfigItem<"mathjax-intellisense-ccpp.interval">,
  /**
   * Style of matched LaTeX code.
   * @key `mathjax-intellisense-ccpp.code`
   * @default `"border-bottom: 1px dashed;"`
   * @type `string`
   */
  code: {
    key: "mathjax-intellisense-ccpp.code",
    default: "border-bottom: 1px dashed;",
  } as ConfigItem<"mathjax-intellisense-ccpp.code">,
  /**
   * Style of the inline formula preview.
   * @key `mathjax-intellisense-ccpp.preview`
   * @default `""`
   * @type `string`
   */
  preview: {
    key: "mathjax-intellisense-ccpp.preview",
    default: "",
  } as ConfigItem<"mathjax-intellisense-ccpp.preview">,
  /**
   * Scale factor of the formula preview.
   * @key `mathjax-intellisense-ccpp.scale`
   * @default `0.8`
   * @type `number`
   */
  scale: {
    key: "mathjax-intellisense-ccpp.scale",
    default: 0.8,
  } as ConfigItem<"mathjax-intellisense-ccpp.scale">,
  /**
   * Paths to files containing LaTeX preamble to preload.
   * @key `mathjax-intellisense-ccpp.preload`
   * @default `[]`
   * @type `array`
   */
  preload: {
    key: "mathjax-intellisense-ccpp.preload",
    default: [],
  } as ConfigItem<"mathjax-intellisense-ccpp.preload">,
  /**
   * List of formula parsers to use.
   * @key `mathjax-intellisense-ccpp.formula`
   * @default `["doxygen"]`
   * @type `array`
   */
  formula: {
    key: "mathjax-intellisense-ccpp.formula",
    default: ["doxygen"],
  } as ConfigItem<"mathjax-intellisense-ccpp.formula">,
  /**
   * Mode of the extension.
   * @key `mathjax-intellisense-ccpp.mode`
   * @default `"both"`
   * @type `string`
   */
  mode: {
    key: "mathjax-intellisense-ccpp.mode",
    default: "both",
  } as ConfigItem<"mathjax-intellisense-ccpp.mode">,
}

export interface ScopedConfigKeyTypeMap {
  "color": string,
  "interval": number,
  "code": string,
  "preview": string,
  "scale": number,
  "preload": string[],
  "formula": ("doxygen" | "markdown")[],
  "mode": ("edit" | "view" | "both"),
}

export const scopedConfigs = {
  scope: "mathjax-intellisense-ccpp",
  defaults: {
    "color": "auto",
    "interval": 300,
    "code": "border-bottom: 1px dashed;",
    "preview": "",
    "scale": 0.8,
    "preload": [],
    "formula": ["doxygen"],
    "mode": "both",
  } satisfies ScopedConfigKeyTypeMap,
}

export interface NestedConfigs {
  "mathjax-intellisense-ccpp": {
    "color": string,
    "interval": number,
    "code": string,
    "preview": string,
    "scale": number,
    "preload": string[],
    "formula": ("doxygen" | "markdown")[],
    "mode": ("edit" | "view" | "both"),
  },
}

export interface NestedScopedConfigs {
  "color": string,
  "interval": number,
  "code": string,
  "preview": string,
  "scale": number,
  "preload": string[],
  "formula": ("doxygen" | "markdown")[],
  "mode": ("edit" | "view" | "both"),
}

