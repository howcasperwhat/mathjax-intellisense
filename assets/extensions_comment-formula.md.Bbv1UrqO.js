import{_ as i,c as a,o as e,ae as n}from"./chunks/framework.ry4xUpQ6.js";const t="/mathjax-intellisense/features/comment-formula.png",g=JSON.parse('{"title":"Comment Formula","description":"","frontmatter":{},"headers":[],"relativePath":"extensions/comment-formula.md","filePath":"extensions/comment-formula.md"}'),l={name:"extensions/comment-formula.md"};function o(p,s,h,r,d,k){return e(),a("div",null,s[0]||(s[0]=[n('<h1 id="comment-formula" tabindex="-1">Comment Formula <a class="header-anchor" href="#comment-formula" aria-label="Permalink to &quot;Comment Formula&quot;">​</a></h1><p><a href="https://marketplace.visualstudio.com/items?itemName=howcasperwhat.comment-formula" target="_blank" rel="noreferrer">VSCode Marketplace</a> · <a href="https://github.com/howcasperwhat/comment-formula" target="_blank" rel="noreferrer">GitHub Repository</a></p><h2 id="features" tabindex="-1">Features <a class="header-anchor" href="#features" aria-label="Permalink to &quot;Features&quot;">​</a></h2><ul><li>Render mathematical formulas directly in document of active editor.</li><li>Support <code>Markdown</code> formats by default.</li></ul><p><img src="'+t+`" alt="Features"></p><h2 id="configurations" tabindex="-1">Configurations <a class="header-anchor" href="#configurations" aria-label="Permalink to &quot;Configurations&quot;">​</a></h2><p>Domain: <code>comment-formula</code> · <a href="/mathjax-intellisense/configs/">General Settings</a></p><h3 id="inline" tabindex="-1"><code>inline</code> <a class="header-anchor" href="#inline" aria-label="Permalink to &quot;\`inline\`&quot;">​</a></h3><p><strong>Type</strong>: <code>string</code></p><p><strong>Default</strong>: <code>[&#39;all&#39;]</code></p><p><strong>Enum</strong>: <code>[&#39;all&#39;, &#39;partial&#39;, &#39;none&#39;]</code></p><p>Due to the lack of an API in VSCode to adjust line height, rendered formulas may exceed the bounds of the lines they are in. This could result in formulas overlapping with the code. The <code>inline</code> configuration option addresses this issue:</p><ul><li><code>all</code>: Always display the formula rendering result as a decoration within the editor, regardless of its height.</li><li><code>partial</code>: If the formula is too tall and exceeds the line bounds, the formula preview will not be displayed inline.</li><li><code>none</code>: Never display the formula rendering result as a decoration within the editor. Instead, you can hover over the formula code to view the rendered formula in a message box.</li></ul><h3 id="languages" tabindex="-1"><code>languages</code> <a class="header-anchor" href="#languages" aria-label="Permalink to &quot;\`languages\`&quot;">​</a></h3><p><strong>Type</strong>: <code>string[]</code></p><p><strong>Default</strong>: <code>[&#39;c&#39;, &#39;cpp&#39;, &#39;matlab&#39;, &#39;python&#39;]</code></p><p><strong>Enum</strong>:</p><ul><li><a href="https://code.visualstudio.com/docs/languages/identifiers" target="_blank" rel="noreferrer">Language IDs</a></li><li>Languages identified by extensions, Extension Panel -&gt; <code>FEATURES</code> -&gt; <code>Programming Language</code> -&gt; <code>ID</code>.</li><li>Languages defined by <a href="#defines"><code>comment-formula.defines</code></a>.</li></ul><h3 id="annotation" tabindex="-1"><code>annotation</code> <a class="header-anchor" href="#annotation" aria-label="Permalink to &quot;\`annotation\`&quot;">​</a></h3><p><strong>Type</strong>: <code>boolean</code></p><p><strong>Default</strong>: <code>true</code></p><p>If disabled, the extension will not render formulas in comments. Just code completion features will be available.</p><h3 id="completion" tabindex="-1"><code>completion</code> <a class="header-anchor" href="#completion" aria-label="Permalink to &quot;\`completion\`&quot;">​</a></h3><p><strong>Type</strong>: <code>boolean</code></p><p><strong>Default</strong>: <code>true</code></p><p>If disabled, the extension will not provide code completion for formulas.</p><h3 id="multiple" tabindex="-1"><code>multiple</code> <a class="header-anchor" href="#multiple" aria-label="Permalink to &quot;\`multiple\`&quot;">​</a></h3><p><strong>Type</strong>: <code>string</code></p><p><strong>Default</strong>: <code>&#39;after&#39;</code></p><p><strong>Enum</strong>: <code>[&#39;before&#39;, &#39;after&#39;, &#39;none&#39;]</code></p><p>Place multi-line formulas&#39; preview (decoration) before or after the formula code.</p><h3 id="single" tabindex="-1"><code>single</code> <a class="header-anchor" href="#single" aria-label="Permalink to &quot;\`single\`&quot;">​</a></h3><p><strong>Type</strong>: <code>string</code></p><p><strong>Default</strong>: <code>&#39;after&#39;</code></p><p><strong>Enum</strong>: <code>[&#39;before&#39;, &#39;after&#39;, &#39;none&#39;]</code></p><p>Place single-line formulas&#39; preview (decoration) before or after the formula code.</p><h3 id="hidden" tabindex="-1"><code>hidden</code> <a class="header-anchor" href="#hidden" aria-label="Permalink to &quot;\`hidden\`&quot;">​</a></h3><p><strong>Type</strong>: <code>string</code></p><p><strong>Default</strong>: <code>&#39;scope&#39;</code></p><p><strong>Enum</strong>: <code>[&#39;scope&#39;, &#39;line&#39;, &#39;none&#39;]</code></p><p>When to hide LaTeX codes in the editor:</p><ul><li><code>scope</code>: when selections are not in LaTeX codes&#39; ranges.</li><li><code>line</code>: when lines of selections are not in LaTeX codes&#39; lines.</li></ul><h3 id="autotab" tabindex="-1"><code>autotab</code> <a class="header-anchor" href="#autotab" aria-label="Permalink to &quot;\`autotab\`&quot;">​</a></h3><p><strong>Type</strong>: <code>boolean</code></p><p><strong>Default</strong>: <code>true</code></p><p>If enabled, the extension will automatically detect the tab-width before the first line of formula codes, and margin the same width for the formula preview.</p><h3 id="defines" tabindex="-1"><code>defines</code> <a class="header-anchor" href="#defines" aria-label="Permalink to &quot;\`defines\`&quot;">​</a></h3><p><strong>Type</strong>:</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">type</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> LanguageID</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> string</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">type</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Pattern</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> string</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">type</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ConfigDefines</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Record</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">LanguageID</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Pattern</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[]&gt;</span></span></code></pre></div><p><strong>Default</strong>: <code>{}</code></p><p>Define custom languages with <code>glob</code> patterns, e.g.:</p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;comment-formula.defines&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;matlab&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;*.m&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;*.mlx&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h3 id="capture" tabindex="-1"><code>capture</code> <a class="header-anchor" href="#capture" aria-label="Permalink to &quot;\`capture\`&quot;">​</a></h3><p><strong>Type</strong>:</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">type</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> LanguageID</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> string</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">interface</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> BaseRegExpOptions</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  strict</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> boolean</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  breakable</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> boolean</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">interface</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> MinuteRegExpOptions</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> extends</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> BaseRegExpOptions</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  prefix</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> string</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  suffix</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> string</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">interface</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> UnshapedRegExpOptions</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> extends</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> BaseRegExpOptions</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  marker</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> string</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">type</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ConfigCapture</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Record</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">LanguageID</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">RegExpOptions</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[]&gt;</span></span></code></pre></div><p><strong>Default</strong>: <code>{}</code></p><div class="warning custom-block github-alert"><p class="custom-block-title">WARNING</p><p>When <code>capture</code> is <code>{}</code>, it will be replace by the below default value:</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> DEFAULT_CAPTURE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  { marker: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;$$&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, breakable: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  { marker: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;$&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, breakable: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span></code></pre></div></div><ul><li><code>marker</code>: when <code>prefix</code> and <code>suffix</code> are the same, you can just set <code>marker</code> to the same value as <code>prefix</code> and <code>suffix</code>.</li><li><code>strict</code>: if <code>true</code>, when escape characters are before <code>prefix</code> or <code>suffix</code>, the formula will not be captured.</li><li><code>breakable</code>: if <code>true</code>, the extension will capture formulas across multiple lines, otherwise it will only capture formulas in a single line. For <code>breakable: false</code>, when their are no <code>suffix</code> in the same line, the formula will be ignored.</li></ul><p>For example, you can define a custom capture rule for <code>Python</code>:</p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;comment-formula.capture&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;cpp&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        &quot;marker&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\\\</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">f$&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        &quot;strict&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        &quot;breakable&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        &quot;prefix&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\\\</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">f[&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        &quot;suffix&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\\\</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">f]&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        &quot;strict&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        &quot;breakable&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    ]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h3 id="message" tabindex="-1"><code>message</code> <a class="header-anchor" href="#message" aria-label="Permalink to &quot;\`message\`&quot;">​</a></h3><ul><li><code>message.playground</code>: Display link of mathjax-playground in hover message. (defult: <code>false</code>)</li><li><code>message.preview</code>: Display image of formula preview in hover message box. (defult: <code>true</code>)</li></ul><h3 id="inspect" tabindex="-1"><code>inspect</code> <a class="header-anchor" href="#inspect" aria-label="Permalink to &quot;\`inspect\`&quot;">​</a></h3><p><strong>Type</strong>: <code>boolean</code></p><p><strong>Default</strong>: <code>false</code></p><p>Enable inspecting performance of formula capturing and rendering. It will display the average time in the status bar.</p>`,66)]))}const u=i(l,[["render",o]]);export{g as __pageData,u as default};
