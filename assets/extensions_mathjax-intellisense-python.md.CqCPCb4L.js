import{_ as e,c as s,o as t,ae as n}from"./chunks/framework.ry4xUpQ6.js";const u=JSON.parse('{"title":"MathJax IntelliSense for Python","description":"","frontmatter":{},"headers":[],"relativePath":"extensions/mathjax-intellisense-python.md","filePath":"extensions/mathjax-intellisense-python.md"}'),i={name:"extensions/mathjax-intellisense-python.md"};function l(o,a,r,h,p,d){return t(),s("div",null,a[0]||(a[0]=[n(`<h1 id="mathjax-intellisense-for-python" tabindex="-1">MathJax IntelliSense for Python <a class="header-anchor" href="#mathjax-intellisense-for-python" aria-label="Permalink to &quot;MathJax IntelliSense for Python&quot;">​</a></h1><p><a href="https://marketplace.visualstudio.com/items?itemName=howcasperwhat.mathjax-intellisense-python" target="_blank" rel="noreferrer">VSCode Marketplace</a> · <a href="https://github.com/howcasperwhat/mathjax-intellisense/tree/main/extensions/mathjax-intellisense-python" target="_blank" rel="noreferrer">GitHub Repository</a></p><h2 id="features" tabindex="-1">Features <a class="header-anchor" href="#features" aria-label="Permalink to &quot;Features&quot;">​</a></h2><ul><li>Render mathematical formulas directly in your docstrings <code>&quot;&quot;&quot; &quot;&quot;&quot;</code> or <code>r&quot;&quot;&quot; &quot;&quot;&quot;</code>.</li><li>Support <a href="https://www.sphinx-doc.org/en/master/usage/restructuredtext/directives.html#directive-math" target="_blank" rel="noreferrer"><code>Sphinx</code></a> and <code>Markdown</code> formats.</li></ul><p><img src="https://github.com/howcasperwhat/mathjax-intellisense/blob/main/extensions/mathjax-intellisense-python/assets/feature.png?raw=true" alt="Features"></p><h2 id="configurations" tabindex="-1">Configurations <a class="header-anchor" href="#configurations" aria-label="Permalink to &quot;Configurations&quot;">​</a></h2><p>Domain: <code>mathjax-intellisense-python</code> · <a href="/mathjax-intellisense/configs/">General Settings</a></p><h3 id="formula" tabindex="-1"><code>formula</code> <a class="header-anchor" href="#formula" aria-label="Permalink to &quot;\`formula\`&quot;">​</a></h3><p><strong>Type</strong>: <code>string[]</code></p><p><strong>Default</strong>: <code>[&#39;sphinx&#39;]</code></p><p><strong>Enum</strong>: <code>[&#39;sphinx&#39;, &#39;markdown&#39;]</code></p><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-or3wE" id="tab-KK3gn9G" checked><label data-title="sphinx" for="tab-KK3gn9G">sphinx</label><input type="radio" name="group-or3wE" id="tab-3dSnMXe"><label data-title="markdown" for="tab-3dSnMXe">markdown</label></div><div class="blocks"><div class="language-python vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">r</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;&#39;&#39;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">1. inline, unbreakable:</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">:math:\`E = mc^2\`</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">2. block, breakable:</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.. math::</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   E = mc^2</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;&#39;&#39;</span></span></code></pre></div><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">r</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;&#39;&#39;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">1. inline, unbreakable: $E = mc^2$</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">2. block, breakable: $$E = mc^2$$</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;&#39;&#39;</span></span></code></pre></div></div></div>`,12)]))}const k=e(i,[["render",l]]);export{u as __pageData,k as default};
