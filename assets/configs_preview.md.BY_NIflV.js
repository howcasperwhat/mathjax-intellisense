import{_ as i,c as e,o as a,ag as t}from"./chunks/framework.DqbAhDyT.js";const k=JSON.parse('{"title":"preview","description":"","frontmatter":{},"headers":[],"relativePath":"configs/preview.md","filePath":"configs/preview.md","lastUpdated":1753621085000}'),n={name:"configs/preview.md"};function l(o,s,p,r,h,c){return a(),e("div",null,s[0]||(s[0]=[t(`<h1 id="preview" tabindex="-1"><code>preview</code> <a class="header-anchor" href="#preview" aria-label="Permalink to &quot;\`preview\`&quot;">​</a></h1><p><strong>Type</strong>: <code>string</code></p><p><strong>Default</strong>: <code>&#39;&#39;</code></p><p>CSS inline style that applied to the preview (decoration) of formulas. It&#39;s CSS injection, so you should guarantee the CSS is valid.</p><div class="warning custom-block github-alert"><p class="custom-block-title">WARNING</p><p></p><ol><li>Note that never change the size and layout using this configuration, as it will affect the rendering of formulas in the editor. Use <a href="/mathjax-intellisense/configs/scale"><code>scale</code></a> instead.</li><li>Frontground color set by <code>color: xxx</code> is no use, use <a href="/mathjax-intellisense/configs/color"><code>color</code></a> instead.</li></ol></div><p>e.g.</p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;mathjax-intellisense.preview&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;background-color: #8888;&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // ❎ DO NOT SET COLOR, SIZE and LAYOUT HERE</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // &quot;mathjax-intellisense.preview&quot;: &quot;color: red; scale: 1.5;&quot;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // ✅ USE \`color\` and \`scale\` CONFIGURATION INSTEAD</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;mathjax-intellisense.color&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;red&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;mathjax-intellisense.scale&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1.5</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div>`,7)]))}const g=i(n,[["render",l]]);export{k as __pageData,g as default};
