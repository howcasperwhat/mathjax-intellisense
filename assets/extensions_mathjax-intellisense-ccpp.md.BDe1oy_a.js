import{_ as a,c as s,o as n,ae as t}from"./chunks/framework.Cd-3tpCq.js";const i="/features/mathjax-intellisense-ccpp.png",k=JSON.parse('{"title":"MathJax IntelliSense for C/C++","description":"","frontmatter":{},"headers":[],"relativePath":"extensions/mathjax-intellisense-ccpp.md","filePath":"extensions/mathjax-intellisense-ccpp.md"}'),l={name:"extensions/mathjax-intellisense-ccpp.md"};function o(r,e,p,c,d,h){return n(),s("div",null,e[0]||(e[0]=[t('<h1 id="mathjax-intellisense-for-c-c" tabindex="-1">MathJax IntelliSense for C/C++ <a class="header-anchor" href="#mathjax-intellisense-for-c-c" aria-label="Permalink to &quot;MathJax IntelliSense for C/C++&quot;">​</a></h1><p><a href="https://marketplace.visualstudio.com/items?itemName=howcasperwhat.mathjax-intellisense-ccpp" target="_blank" rel="noreferrer">VSCode Marketplace</a> · <a href="https://github.com/howcasperwhat/mathjax-intellisense/tree/main/extensions/mathjax-intellisense-ccpp" target="_blank" rel="noreferrer">GitHub Repository</a></p><h2 id="features" tabindex="-1">Features <a class="header-anchor" href="#features" aria-label="Permalink to &quot;Features&quot;">​</a></h2><ul><li>Render mathematical formulas directly in your docstrings <code>///</code> or <code>/** */</code> comments.</li><li>Support <a href="https://www.doxygen.nl/manual/formulas.html" target="_blank" rel="noreferrer"><code>Doxygen</code></a> and <code>Markdown</code> formats.</li></ul><p><img src="'+i+'" alt="Features"></p><h2 id="configurations" tabindex="-1">Configurations <a class="header-anchor" href="#configurations" aria-label="Permalink to &quot;Configurations&quot;">​</a></h2><p>Domain: <code>mathjax-intellisense-ccpp</code> · <a href="/configs/">General Settings</a></p><h3 id="formula" tabindex="-1"><code>formula</code> <a class="header-anchor" href="#formula" aria-label="Permalink to &quot;`formula`&quot;">​</a></h3><p><strong>Type</strong>: <code>string[]</code></p><p><strong>Default</strong>: <code>[&#39;doxygen&#39;]</code></p><p><strong>Enum</strong>: <code>[&#39;doxygen&#39;, &#39;markdown&#39;]</code></p><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-j5vce" id="tab-WJMM0a5" checked><label data-title="doxygen" for="tab-WJMM0a5">doxygen</label><input type="radio" name="group-j5vce" id="tab-vLKOil7"><label data-title="markdown" for="tab-vLKOil7">markdown</label></div><div class="blocks"><div class="language-cpp vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/**</span></span>\n<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * 1. \\f$ E = mc^2 \\f$ (inline, breakable)</span></span>\n<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * 2. \\f( E = mc^2 \\f) (inelie, breakable)</span></span>\n<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * 3. \\f[ E = mc^2 \\f] (block, breakable)</span></span>\n<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * 4. \\f{$env}{ E = mc^2 \\f} (block, breakable), where `$env` is the environment name, e.g., `equation`, `align`, etc.</span></span>\n<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">*/</span></span></code></pre></div><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/**</span></span>\n<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * 1. $ E = mc^2 $ (inline, unbreakable)</span></span>\n<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * 2. $$ E = mc^2 $$ (block, breakable)</span></span>\n<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> */</span></span></code></pre></div></div></div>',12)]))}const u=a(l,[["render",o]]);export{k as __pageData,u as default};
